/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'admin2' at '11.04.16 12:24' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */


buildscript {
    repositories {

    jcenter()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'http://central.maven.org/maven2' }
    
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
    }
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

ext {
    springSecurityVersion = "4.0.4.RELEASE"
    mysqlConectorVersion ="5.1.38" 
    springSessionVersion ="1.1.1.RELEASE"
    springWebsocketVersion ="4.2.5.RELEASE" 
    emailNotification = ""
}

repositories {

    jcenter()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'http://central.maven.org/maven2' }
    
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
  
    baseName 'invite'
}

task setHttpProxyFromEnv {
    def map = ['HTTP_PROXY': 'http', 'HTTPS_PROXY': 'https']
    for (e in System.getenv()) {
        def key = e.key.toUpperCase()
        if (key in map) {
            def base = map[key]
            def url = e.value.toURL()
            println " - systemProp.${base}.proxy=${url.host}:${url.port}"
            System.setProperty("${base}.proxyHost", url.host.toString())
            System.setProperty("${base}.proxyPort", url.port.toString())
        }
    }
}

build.dependsOn setHttpProxyFromEnv


dependencies {
    
    compile ("org.slf4j:slf4j-api:1.7.14")
	
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
	compile("org.springframework.boot:spring-boot-devtools")
	
	
    // tag::security[]
    compile("org.springframework.boot:spring-boot-starter-security")
    // end::security[]
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-websocket:$springWebsocketVersion")
    
    //compile("org.springframework.boot:spring-boot-starter-redis")
   	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '1.5.10.RELEASE'
    
    compile("org.springframework.session:spring-session:$springSessionVersion")
   
    compile("org.springframework.security:spring-security-web:$springSecurityVersion")
    compile("org.springframework.security:spring-security-config:$springSecurityVersion")
    compile("org.springframework.security:spring-security-messaging:$springSecurityVersion")
    compile("org.springframework.security:spring-security-data:$springSecurityVersion")
  
	
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("mysql:mysql-connector-java:$mysqlConectorVersion")
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
    testCompile 'junit:junit:4.12'
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
